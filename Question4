Q4.Compare Promises to callbacks and discuss why Promises are preferred for managing asynchronous
code.

ANSWER4:
**Callbacks** are functions passed into other functions, which are executed when an asynchronous operation is complete. However, they can lead to **callback hell** when nested deeply, making the code difficult to read and maintain.

**Promises** provide a cleaner and more manageable way to handle asynchronous operations. They allow chaining of `.then()` methods, making the code easier to read and handle errors through `.catch()`. Promises improve error handling and avoid the complexities of deeply nested callbacks, making them the preferred choice for managing asynchronous code in modern JavaScript.